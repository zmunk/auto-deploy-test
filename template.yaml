AWSTemplateFormatVersion: 2010-09-09
Description: EC2 Instance with access to S3 buckets

Parameters:
  GithubOwner:
    Type: String
    Default: zmunk
    AllowedPattern: "[A-Za-z0-9-]+"
  GithubRepo:
    Type: String
    Default: auto-deploy-test
    AllowedPattern: "[A-Za-z0-9-]+"
  GithubBranch:
    Type: String
    Default: main
    AllowedPattern: "[A-Za-z0-9-]+"
  GithubOAuthToken:
    Type: String
    NoEcho: true
    AllowedPattern: '[A-Za-z0-9_]*'

Resources:

  ##########
  #   S3   #
  ##########

  ReactAppBucket:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ReactAppBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${ReactAppBucket}/*"

  ##################
  #   CloudFront   #
  ##################

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultRootObject: index.html
        Origins:
          - DomainName: !GetAtt ReactAppBucket.RegionalDomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: ""
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
        Enabled: true


  #################
  #   CodeBuild   #
  #################

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Path: /service-role/
      Policies:
        - PolicyName: CodeBuildCICDAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${ReactAppBucket}/*
                  - !Sub arn:aws:s3:::${ReactAppBucket}
              - Effect: Allow  
                Action:
                  - "codepipeline:CreateWebhook"
                  - "codepipeline:DeleteWebhook"
                Resource: "*"                


  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: !Ref GithubOAuthToken


  ReactCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ReactCodeBuildProject-${AWS::StackName}
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        EnvironmentVariables:
          - Name: BUILD_ARTIFACT_BUCKET
            Value: !Ref ReactAppBucket
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 15


  ####################
  #   CodePipeline   #
  ####################

  GithubConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Sub GithubConnection-${AWS::StackName}
      ProviderType: GitHub

  GithubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GithubOAuthToken
      RegisterWithThirdParty: true
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version


  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: S3CodebuildAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                Resource:
                  - !Sub ${ReactAppBucket.Arn}
                  - !Sub ${ReactAppBucket.Arn}/*
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource:
                  - !Ref GithubConnection

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ReactAppBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Provider: GitHub
                Owner: ThirdParty
                Version: 1
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                Owner: !Ref GithubOwner
                Repo: !Ref GithubRepo
                Branch: !Ref GithubBranch
                PollForSourceChanges: false
                OAuthToken: !Ref GithubOAuthToken
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Sub ReactCodeBuildProject-${AWS::StackName}
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: Deploy
          Actions: 
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Provider: S3
                Owner: AWS
                Version: 1
              InputArtifacts: 
              - Name: BuildArtifact  
              Configuration:                
                BucketName: !Ref ReactAppBucket
                Extract: true


Outputs:
  CloudFrontDistributionDomain:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Description: CloudFront Distribution Domain Name
  S3BucketName:
    Value: !Ref ReactAppBucket
    Description: 'The name of the created S3 bucket'
